// to deploy .rules file
// firebase deploy --only firestore:rules

service cloud.firestore {
  match /databases/{database}/documents {

    // *** GENERAL
    function currentUserId() {
        return request.auth.uid;
    }

    function isAuthenticated() {
        return currentUserId() != null;
    }

    function incomingData() {
        return request.resource.data;
    }

    function existingData() {
        return resource.data;
    }

    // *** BETS
    match /bets/{betId} {
       // reading data is allowed for logged in users or public bets
       allow read: if isAuthenticated() || isPublic();

       // a logged in user can create a bet
       allow create: if isAuthenticated() && incomingData().admin == currentUserId()

       // a admin user can update the bet. Another user can only change his participant info and not change any other data.
       allow update: if isAdmin() || betDataIsUnchanged();

       // only admins can delete a bet
       allow delete: if isAdmin();
    }

    function isPublic() {
        return existingData().visibility == 'public'
    }

    function isAdmin() {
        return currentUserId() == existingData().admin;
    }

    function betDataIsUnchanged() {
        return incomingData().admin == existingData().admin &&
                incomingData().dateCreated == existingData().dateCreated &&
                incomingData().dateEnd == existingData().dateEnd &&
                incomingData().description == existingData().description &&
                incomingData().title == existingData().title &&
                incomingData().visibility == existingData().visibility;
    }

    // *** USER
    match /users/{userId} {
        // reading user data is allowed for any logged in user
        allow read: if isAuthenticated();

        // a logged in user is be able to create its and (only its!) user object
        allow create: if currentUserId() == userId;

        // a user can update it's data. Another user can only invite him to a bet and not change any other data.
        allow update: if isUserData(userId) || userDataIsUnchanged();

        // a user can only delete his own user data
        allow delete: if isUserData(userId);
    }

    function isUserData(userId) {
        return existingData().uid == currentUserId() == userId;
    }

    function userDataIsUnchanged() {
        return incomingData().displayName == existingData().displayName &&
                incomingData().email == existingData().email &&
                incomingData().emailVerified == existingData().emailVerified &&
                incomingData().photoURL == existingData().photoURL &&
                incomingData().uid == existingData().uid;
    }
  }
}